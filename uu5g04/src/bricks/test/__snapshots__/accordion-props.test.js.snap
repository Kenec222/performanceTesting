// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UU5.Bricks.Accordion AllowTagsComponent UU5.Bricks.Accordion props - allowTags 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID1"
  style={Object {}}
  title={null}
>
  <Panel
    content="Panel content"
    header="Panel 1"
    id="uuID2"
    key="uuID2"
    onClick={[Function]}
  />
  <UU5.Example.MyCompButton
    colorSchema={null}
    iconAlign={null}
    iconCollapsed={null}
    iconExpanded={null}
    id="myAllowTagsID"
    key="myAllowTagsID"
    onClick={[Function]}
    openClick={null}
    size="m"
    tooltip="This is my allowTags Component"
  />
</div>
`;

exports[`UU5.Bricks.Accordion docKit example UU5.Bricks.Accordion example01 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID1"
  style={Object {}}
  title={null}
>
  <Panel
    content="Panel content"
    header="Panel 1"
    id="uuID2"
    key="uuID2"
    onClick={[Function]}
  />
  <Panel
    content="Panel content"
    header="Panel 2"
    id="uuID3"
    key="uuID3"
    onClick={[Function]}
  />
  <Panel
    content="Panel content"
    header="Panel 3"
    id="uuID4"
    key="uuID4"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props allowTags=undefined 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props checkGrammar=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props checkGrammar=true 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props checkHighlight=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props checkHighlight=true 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props checkSpaces=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props checkSpaces=true 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props className="my-classname" 1`] = `
<div
  className="uu5-bricks-accordion my-classname"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props className="test-classname" 1`] = `
<div
  className="uu5-bricks-accordion test-classname"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="brown" 1`] = `
<div
  className="color-schema-brown uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="brown"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="brown-rich" 1`] = `
<div
  className="color-schema-brown-rich uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="brown-rich"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="cyan" 1`] = `
<div
  className="color-schema-cyan uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="cyan"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="cyan-rich" 1`] = `
<div
  className="color-schema-cyan-rich uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="cyan-rich"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="default" 1`] = `
<div
  className="color-schema-default uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="default"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="green" 1`] = `
<div
  className="color-schema-green uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="green"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="green-rich" 1`] = `
<div
  className="color-schema-green-rich uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="green-rich"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="grey" 1`] = `
<div
  className="color-schema-grey uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="grey"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="grey-rich" 1`] = `
<div
  className="color-schema-grey-rich uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="grey-rich"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="orange" 1`] = `
<div
  className="color-schema-orange uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="orange"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="orange-rich" 1`] = `
<div
  className="color-schema-orange-rich uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="orange-rich"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="pink" 1`] = `
<div
  className="color-schema-pink uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="pink"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="pink-rich" 1`] = `
<div
  className="color-schema-pink-rich uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="pink-rich"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="purple" 1`] = `
<div
  className="color-schema-purple uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="purple"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="purple-rich" 1`] = `
<div
  className="color-schema-purple-rich uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="purple-rich"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="red" 1`] = `
<div
  className="color-schema-red uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="red"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="red-rich" 1`] = `
<div
  className="color-schema-red-rich uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="red-rich"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="yellow" 1`] = `
<div
  className="color-schema-yellow uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="yellow"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props colorSchema="yellow-rich" 1`] = `
<div
  className="color-schema-yellow-rich uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    colorSchema="yellow-rich"
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props content="This is Content from ContentMixin" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
/>
`;

exports[`UU5.Bricks.Accordion props content=12345 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
/>
`;

exports[`UU5.Bricks.Accordion props controlled=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props controlled=true 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props default props 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props disabled=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props disabled=false 3`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props disabled=true 1`] = `
<div
  className="uu5-bricks-accordion uu5-common-disabled"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
  <span
    className="uu5-common-disabled-cover"
    key="disabledCover"
  />
</div>
`;

exports[`UU5.Bricks.Accordion props disabled=true 3`] = `
<div
  className="uu5-bricks-accordion uu5-common-disabled"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
  <span
    className="uu5-common-disabled-cover"
    key="disabledCover"
  />
</div>
`;

exports[`UU5.Bricks.Accordion props dynamic=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props dynamic=true 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props elementAttrs={"data":{"test":"data-test-value"}} 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props fullTextSearchPriority=0 1`] = `
<div
  className="uu5-bricks-accordion uu-fulltextsearch-0"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props fullTextSearchPriority=0 2`] = `
<div
  className="uu5-bricks-accordion uu-fulltextsearch-0"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props hidden=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props hidden=false 3`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props hidden=true 1`] = `
<div
  className="uu5-bricks-accordion uu5-common-hidden"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props hidden=true 3`] = `
<div
  className="uu5-bricks-accordion uu5-common-hidden"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props iconCollapsed="uu5-plus" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    iconCollapsed="uu5-plus"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props iconExpanded="uu5-minus" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    iconExpanded="uu5-minus"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props id="myId" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="myId"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props id="test-id" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="test-id"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props ignoreHTML=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props ignoreHTML=true 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props mainAttrs=undefined 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props name="myName" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  name="myName"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props nestingLevel="bigBox" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props nestingLevel="bigBoxCollection" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props nestingLevel="box" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props nestingLevel="box" 3`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props nestingLevel="boxCollection" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props nestingLevel="inline" 1`] = `
<UU5.BricksEditable.InlineMode
  Component={[Function]}
  component={
    Object {
      "__isMounted": true,
      "_domNode": null,
      "_isMounted": true,
      "_resizeCallbacks": Object {},
      "context": Object {},
      "id": "uuID",
      "mixinRegister": Array [
        "UU5.Common.BaseMixin",
        "UU5.Common.ElementaryMixin",
        "UU5.Common.NestingLevelMixin",
        "UU5.Common.ColorSchemaMixin",
        "UU5.Common.ContentMixin",
        "UU5.Common.PureRenderMixin",
        "UU5.Common.EditableMixin",
      ],
      "props": Object {
        "allowTags": Array [],
        "checkGrammar": undefined,
        "checkHighlight": undefined,
        "checkSpaces": undefined,
        "children": Array [
          <Panel
            alwaysExpanded={false}
            bgStyle={null}
            bgStyleContent={null}
            bgStyleHeader={null}
            borderRadius={null}
            className={null}
            colorSchema={null}
            content="Text in Panel"
            contentEditable={true}
            controlled={true}
            disabled={false}
            dynamic={false}
            elevation={null}
            expanded={false}
            footer={null}
            header={null}
            hidden={false}
            iconAlign={null}
            iconCollapsed={null}
            iconExpanded={null}
            id="childrenID"
            ignoreInnerHTML={false}
            increaseLevel={false}
            level={null}
            mainAttrs={null}
            name={null}
            nestingLevel={null}
            onClick={null}
            openClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            size="m"
            style={null}
            tooltip={null}
            underline={false}
          />,
        ],
        "className": null,
        "colorSchema": null,
        "content": null,
        "contentEditable": true,
        "controlled": true,
        "disabled": false,
        "dynamic": false,
        "fullTextSearchPriority": undefined,
        "getEditablePropValue": undefined,
        "hidden": false,
        "iconAlign": null,
        "iconCollapsed": null,
        "iconExpanded": null,
        "id": "uuID",
        "ignoreInnerHTML": false,
        "mainAttrs": null,
        "mountPanelContent": undefined,
        "name": null,
        "nestingLevel": "inline",
        "onClick": null,
        "onClickNotCollapseOthers": false,
        "openClick": null,
        "panels": null,
        "parent": null,
        "pureRender": false,
        "ref_": null,
        "selected": false,
        "size": "m",
        "style": null,
        "textCorrector": undefined,
        "tooltip": null,
      },
      "refs": Object {},
      "renderedChildren": Array [],
      "renderedChildrenIdList": Object {},
      "renderedChildrenNameList": Object {},
      "state": Object {
        "disabled": false,
        "editableComponentLazyLoaded": false,
        "editation": false,
        "hidden": false,
        "mode": undefined,
        "nestingLevel": null,
        "selected": false,
      },
      "tagName": "UU5.Bricks.Accordion",
    }
  }
  editModalHeader={
    <Lsi
      allowTags={Array []}
      className={null}
      content={null}
      controlled={true}
      disabled={false}
      dynamic={false}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      language={null}
      lsi={
        Object {
          "cs": "Upravit accordion",
          "en": "Edit accordion",
          "uk": "Редагувати акордеон",
        }
      }
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      params={null}
      parent={null}
      pureRender={false}
      ref_={null}
      selected={false}
      style={null}
      tooltip={null}
    />
  }
  linkTitle={
    <span
      className="uu-bricks-1jt2d61"
    >
      <Panel
        alwaysExpanded={false}
        bgStyle={null}
        bgStyleContent={null}
        bgStyleHeader={null}
        borderRadius={null}
        className={null}
        colorSchema={null}
        content="Text in Panel"
        contentEditable={true}
        controlled={true}
        disabled={false}
        dynamic={false}
        elevation={null}
        expanded={false}
        footer={null}
        header={null}
        hidden={false}
        iconAlign={null}
        iconCollapsed={null}
        iconExpanded={null}
        id="childrenID"
        ignoreInnerHTML={false}
        increaseLevel={false}
        level={null}
        mainAttrs={null}
        name={null}
        nestingLevel={null}
        onClick={[Function]}
        openClick={null}
        parent={null}
        pureRender={false}
        ref_={null}
        selected={false}
        size="m"
        style={null}
        tooltip={null}
        underline={false}
      />
    </span>
  }
  modalHeader={
    <Lsi
      allowTags={Array []}
      className={null}
      content={null}
      controlled={true}
      disabled={false}
      dynamic={false}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      language={null}
      lsi={
        Object {
          "cs": "Akordeon",
          "en": "Accordion",
          "uk": "Акордеон",
        }
      }
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      params={null}
      parent={null}
      pureRender={false}
      ref_={null}
      selected={false}
      style={null}
      tooltip={null}
    />
  }
  renderEditationMode={[Function]}
/>
`;

exports[`UU5.Bricks.Accordion props nestingLevel="inline" 3`] = `
<UU5.BricksEditable.InlineMode
  Component={[Function]}
  component={
    Object {
      "__isMounted": true,
      "_domNode": null,
      "_isMounted": true,
      "_resizeCallbacks": Object {},
      "context": Object {},
      "id": "uuID",
      "mixinRegister": Array [
        "UU5.Common.BaseMixin",
        "UU5.Common.ElementaryMixin",
        "UU5.Common.NestingLevelMixin",
        "UU5.Common.ColorSchemaMixin",
        "UU5.Common.ContentMixin",
        "UU5.Common.PureRenderMixin",
        "UU5.Common.EditableMixin",
      ],
      "props": Object {
        "allowTags": Array [],
        "checkGrammar": undefined,
        "checkHighlight": undefined,
        "checkSpaces": undefined,
        "children": Array [
          <Panel
            alwaysExpanded={false}
            bgStyle={null}
            bgStyleContent={null}
            bgStyleHeader={null}
            borderRadius={null}
            className={null}
            colorSchema={null}
            content="Text in Panel"
            contentEditable={true}
            controlled={true}
            disabled={false}
            dynamic={false}
            elevation={null}
            expanded={false}
            footer={null}
            header={null}
            hidden={false}
            iconAlign={null}
            iconCollapsed={null}
            iconExpanded={null}
            id="childrenID"
            ignoreInnerHTML={false}
            increaseLevel={false}
            level={null}
            mainAttrs={null}
            name={null}
            nestingLevel={null}
            onClick={null}
            openClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            size="m"
            style={null}
            tooltip={null}
            underline={false}
          />,
        ],
        "className": null,
        "colorSchema": null,
        "content": null,
        "contentEditable": true,
        "controlled": true,
        "disabled": false,
        "dynamic": false,
        "fullTextSearchPriority": undefined,
        "getEditablePropValue": undefined,
        "hidden": false,
        "iconAlign": null,
        "iconCollapsed": null,
        "iconExpanded": null,
        "id": "uuID",
        "ignoreInnerHTML": false,
        "mainAttrs": null,
        "mountPanelContent": undefined,
        "name": null,
        "nestingLevel": "inline",
        "onClick": null,
        "onClickNotCollapseOthers": false,
        "openClick": null,
        "panels": null,
        "parent": null,
        "pureRender": false,
        "ref_": null,
        "selected": false,
        "size": "m",
        "style": null,
        "textCorrector": undefined,
        "tooltip": null,
      },
      "refs": Object {},
      "renderedChildren": Array [],
      "renderedChildrenIdList": Object {},
      "renderedChildrenNameList": Object {},
      "state": Object {
        "disabled": false,
        "editableComponentLazyLoaded": false,
        "editation": false,
        "hidden": false,
        "mode": undefined,
        "nestingLevel": null,
        "selected": false,
      },
      "tagName": "UU5.Bricks.Accordion",
    }
  }
  editModalHeader={
    <Lsi
      allowTags={Array []}
      className={null}
      content={null}
      controlled={true}
      disabled={false}
      dynamic={false}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      language={null}
      lsi={
        Object {
          "cs": "Upravit accordion",
          "en": "Edit accordion",
          "uk": "Редагувати акордеон",
        }
      }
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      params={null}
      parent={null}
      pureRender={false}
      ref_={null}
      selected={false}
      style={null}
      tooltip={null}
    />
  }
  linkTitle={
    <span
      className="uu-bricks-1jt2d61"
    >
      <Panel
        alwaysExpanded={false}
        bgStyle={null}
        bgStyleContent={null}
        bgStyleHeader={null}
        borderRadius={null}
        className={null}
        colorSchema={null}
        content="Text in Panel"
        contentEditable={true}
        controlled={true}
        disabled={false}
        dynamic={false}
        elevation={null}
        expanded={false}
        footer={null}
        header={null}
        hidden={false}
        iconAlign={null}
        iconCollapsed={null}
        iconExpanded={null}
        id="childrenID"
        ignoreInnerHTML={false}
        increaseLevel={false}
        level={null}
        mainAttrs={null}
        name={null}
        nestingLevel={null}
        onClick={[Function]}
        openClick={null}
        parent={null}
        pureRender={false}
        ref_={null}
        selected={false}
        size="m"
        style={null}
        tooltip={null}
        underline={false}
      />
    </span>
  }
  modalHeader={
    <Lsi
      allowTags={Array []}
      className={null}
      content={null}
      controlled={true}
      disabled={false}
      dynamic={false}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      language={null}
      lsi={
        Object {
          "cs": "Akordeon",
          "en": "Accordion",
          "uk": "Акордеон",
        }
      }
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      params={null}
      parent={null}
      pureRender={false}
      ref_={null}
      selected={false}
      style={null}
      tooltip={null}
    />
  }
  renderEditationMode={[Function]}
/>
`;

exports[`UU5.Bricks.Accordion props nestingLevel="page" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props nestingLevel="smallBox" 1`] = `
<UU5.BricksEditable.InlineMode
  Component={[Function]}
  component={
    Object {
      "__isMounted": true,
      "_domNode": null,
      "_isMounted": true,
      "_resizeCallbacks": Object {},
      "context": Object {},
      "id": "uuID",
      "mixinRegister": Array [
        "UU5.Common.BaseMixin",
        "UU5.Common.ElementaryMixin",
        "UU5.Common.NestingLevelMixin",
        "UU5.Common.ColorSchemaMixin",
        "UU5.Common.ContentMixin",
        "UU5.Common.PureRenderMixin",
        "UU5.Common.EditableMixin",
      ],
      "props": Object {
        "allowTags": Array [],
        "checkGrammar": undefined,
        "checkHighlight": undefined,
        "checkSpaces": undefined,
        "children": Array [
          <Panel
            alwaysExpanded={false}
            bgStyle={null}
            bgStyleContent={null}
            bgStyleHeader={null}
            borderRadius={null}
            className={null}
            colorSchema={null}
            content="Text in Panel"
            contentEditable={true}
            controlled={true}
            disabled={false}
            dynamic={false}
            elevation={null}
            expanded={false}
            footer={null}
            header={null}
            hidden={false}
            iconAlign={null}
            iconCollapsed={null}
            iconExpanded={null}
            id="childrenID"
            ignoreInnerHTML={false}
            increaseLevel={false}
            level={null}
            mainAttrs={null}
            name={null}
            nestingLevel={null}
            onClick={null}
            openClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            size="m"
            style={null}
            tooltip={null}
            underline={false}
          />,
        ],
        "className": null,
        "colorSchema": null,
        "content": null,
        "contentEditable": true,
        "controlled": true,
        "disabled": false,
        "dynamic": false,
        "fullTextSearchPriority": undefined,
        "getEditablePropValue": undefined,
        "hidden": false,
        "iconAlign": null,
        "iconCollapsed": null,
        "iconExpanded": null,
        "id": "uuID",
        "ignoreInnerHTML": false,
        "mainAttrs": null,
        "mountPanelContent": undefined,
        "name": null,
        "nestingLevel": "smallBox",
        "onClick": null,
        "onClickNotCollapseOthers": false,
        "openClick": null,
        "panels": null,
        "parent": null,
        "pureRender": false,
        "ref_": null,
        "selected": false,
        "size": "m",
        "style": null,
        "textCorrector": undefined,
        "tooltip": null,
      },
      "refs": Object {},
      "renderedChildren": Array [],
      "renderedChildrenIdList": Object {},
      "renderedChildrenNameList": Object {},
      "state": Object {
        "disabled": false,
        "editableComponentLazyLoaded": false,
        "editation": false,
        "hidden": false,
        "mode": undefined,
        "nestingLevel": null,
        "selected": false,
      },
      "tagName": "UU5.Bricks.Accordion",
    }
  }
  editModalHeader={
    <Lsi
      allowTags={Array []}
      className={null}
      content={null}
      controlled={true}
      disabled={false}
      dynamic={false}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      language={null}
      lsi={
        Object {
          "cs": "Upravit accordion",
          "en": "Edit accordion",
          "uk": "Редагувати акордеон",
        }
      }
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      params={null}
      parent={null}
      pureRender={false}
      ref_={null}
      selected={false}
      style={null}
      tooltip={null}
    />
  }
  linkTitle={
    <span
      className="uu-bricks-1jt2d61"
    >
      <Panel
        alwaysExpanded={false}
        bgStyle={null}
        bgStyleContent={null}
        bgStyleHeader={null}
        borderRadius={null}
        className={null}
        colorSchema={null}
        content="Text in Panel"
        contentEditable={true}
        controlled={true}
        disabled={false}
        dynamic={false}
        elevation={null}
        expanded={false}
        footer={null}
        header={null}
        hidden={false}
        iconAlign={null}
        iconCollapsed={null}
        iconExpanded={null}
        id="childrenID"
        ignoreInnerHTML={false}
        increaseLevel={false}
        level={null}
        mainAttrs={null}
        name={null}
        nestingLevel={null}
        onClick={[Function]}
        openClick={null}
        parent={null}
        pureRender={false}
        ref_={null}
        selected={false}
        size="m"
        style={null}
        tooltip={null}
        underline={false}
      />
    </span>
  }
  modalHeader={
    <Lsi
      allowTags={Array []}
      className={null}
      content={null}
      controlled={true}
      disabled={false}
      dynamic={false}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      language={null}
      lsi={
        Object {
          "cs": "Akordeon",
          "en": "Accordion",
          "uk": "Акордеон",
        }
      }
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      params={null}
      parent={null}
      pureRender={false}
      ref_={null}
      selected={false}
      style={null}
      tooltip={null}
    />
  }
  renderEditationMode={[Function]}
/>
`;

exports[`UU5.Bricks.Accordion props nestingLevel="smallBoxCollection" 1`] = `
<UU5.BricksEditable.InlineMode
  Component={[Function]}
  component={
    Object {
      "__isMounted": true,
      "_domNode": null,
      "_isMounted": true,
      "_resizeCallbacks": Object {},
      "context": Object {},
      "id": "uuID",
      "mixinRegister": Array [
        "UU5.Common.BaseMixin",
        "UU5.Common.ElementaryMixin",
        "UU5.Common.NestingLevelMixin",
        "UU5.Common.ColorSchemaMixin",
        "UU5.Common.ContentMixin",
        "UU5.Common.PureRenderMixin",
        "UU5.Common.EditableMixin",
      ],
      "props": Object {
        "allowTags": Array [],
        "checkGrammar": undefined,
        "checkHighlight": undefined,
        "checkSpaces": undefined,
        "children": Array [
          <Panel
            alwaysExpanded={false}
            bgStyle={null}
            bgStyleContent={null}
            bgStyleHeader={null}
            borderRadius={null}
            className={null}
            colorSchema={null}
            content="Text in Panel"
            contentEditable={true}
            controlled={true}
            disabled={false}
            dynamic={false}
            elevation={null}
            expanded={false}
            footer={null}
            header={null}
            hidden={false}
            iconAlign={null}
            iconCollapsed={null}
            iconExpanded={null}
            id="childrenID"
            ignoreInnerHTML={false}
            increaseLevel={false}
            level={null}
            mainAttrs={null}
            name={null}
            nestingLevel={null}
            onClick={null}
            openClick={null}
            parent={null}
            pureRender={false}
            ref_={null}
            selected={false}
            size="m"
            style={null}
            tooltip={null}
            underline={false}
          />,
        ],
        "className": null,
        "colorSchema": null,
        "content": null,
        "contentEditable": true,
        "controlled": true,
        "disabled": false,
        "dynamic": false,
        "fullTextSearchPriority": undefined,
        "getEditablePropValue": undefined,
        "hidden": false,
        "iconAlign": null,
        "iconCollapsed": null,
        "iconExpanded": null,
        "id": "uuID",
        "ignoreInnerHTML": false,
        "mainAttrs": null,
        "mountPanelContent": undefined,
        "name": null,
        "nestingLevel": "smallBoxCollection",
        "onClick": null,
        "onClickNotCollapseOthers": false,
        "openClick": null,
        "panels": null,
        "parent": null,
        "pureRender": false,
        "ref_": null,
        "selected": false,
        "size": "m",
        "style": null,
        "textCorrector": undefined,
        "tooltip": null,
      },
      "refs": Object {},
      "renderedChildren": Array [],
      "renderedChildrenIdList": Object {},
      "renderedChildrenNameList": Object {},
      "state": Object {
        "disabled": false,
        "editableComponentLazyLoaded": false,
        "editation": false,
        "hidden": false,
        "mode": undefined,
        "nestingLevel": null,
        "selected": false,
      },
      "tagName": "UU5.Bricks.Accordion",
    }
  }
  editModalHeader={
    <Lsi
      allowTags={Array []}
      className={null}
      content={null}
      controlled={true}
      disabled={false}
      dynamic={false}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      language={null}
      lsi={
        Object {
          "cs": "Upravit accordion",
          "en": "Edit accordion",
          "uk": "Редагувати акордеон",
        }
      }
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      params={null}
      parent={null}
      pureRender={false}
      ref_={null}
      selected={false}
      style={null}
      tooltip={null}
    />
  }
  linkTitle={
    <span
      className="uu-bricks-1jt2d61"
    >
      <Panel
        alwaysExpanded={false}
        bgStyle={null}
        bgStyleContent={null}
        bgStyleHeader={null}
        borderRadius={null}
        className={null}
        colorSchema={null}
        content="Text in Panel"
        contentEditable={true}
        controlled={true}
        disabled={false}
        dynamic={false}
        elevation={null}
        expanded={false}
        footer={null}
        header={null}
        hidden={false}
        iconAlign={null}
        iconCollapsed={null}
        iconExpanded={null}
        id="childrenID"
        ignoreInnerHTML={false}
        increaseLevel={false}
        level={null}
        mainAttrs={null}
        name={null}
        nestingLevel={null}
        onClick={[Function]}
        openClick={null}
        parent={null}
        pureRender={false}
        ref_={null}
        selected={false}
        size="m"
        style={null}
        tooltip={null}
        underline={false}
      />
    </span>
  }
  modalHeader={
    <Lsi
      allowTags={Array []}
      className={null}
      content={null}
      controlled={true}
      disabled={false}
      dynamic={false}
      hidden={false}
      id={null}
      ignoreInnerHTML={false}
      language={null}
      lsi={
        Object {
          "cs": "Akordeon",
          "en": "Accordion",
          "uk": "Акордеон",
        }
      }
      mainAttrs={null}
      name={null}
      nestingLevel={null}
      params={null}
      parent={null}
      pureRender={false}
      ref_={null}
      selected={false}
      style={null}
      tooltip={null}
    />
  }
  renderEditationMode={[Function]}
/>
`;

exports[`UU5.Bricks.Accordion props nestingLevel="spa" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props noPrint=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props noPrint=true 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props onClickNotCollapseOthers=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props onClickNotCollapseOthers=true 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
  />
</div>
`;

exports[`UU5.Bricks.Accordion props panels=[{"header":"panel1","content":"panel1"}] 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="panel1"
    header="panel1"
    key="uu5-content-0"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props pureRender=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props pureRender=true 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props selected=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props selected=true 1`] = `
<div
  className="uu5-bricks-accordion uu5-common-selected"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props size="l" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
    size="l"
  />
</div>
`;

exports[`UU5.Bricks.Accordion props size="m" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props size="s" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
    size="s"
  />
</div>
`;

exports[`UU5.Bricks.Accordion props size="xl" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
    size="xl"
  />
</div>
`;

exports[`UU5.Bricks.Accordion props style="padding:8px; borderRadius: 2px" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={
    Object {
      "borderRadius": "2px",
      "padding": "8px",
    }
  }
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props style={"backgroundColor":"red","color":"blue"} 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={
    Object {
      "backgroundColor": "red",
      "color": "blue",
    }
  }
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props style={"margin":8} 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={
    Object {
      "margin": 8,
    }
  }
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props textCorrector=false 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props textCorrector=true 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title={null}
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props tooltip="My Tooltip" 1`] = `
<div
  className="uu5-bricks-accordion"
  id="uuID"
  style={Object {}}
  title="My Tooltip"
>
  <Panel
    content="Text in Panel"
    id="childrenID"
    key="childrenID"
    onClick={[Function]}
  />
</div>
`;

exports[`UU5.Bricks.Accordion props.Function UU5.Bricks.Accordion -  onClick() should be called 1`] = `
<Accordion
  id="uuID1"
  onClick={[Function]}
>
  <Panel
    content="Panel content One"
    header="Panel 1"
    iconCollapsed="uu5-minus"
    iconExpanded="uu5-plus"
    id="uuID2"
  />
</Accordion>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UU5.Forms.Number default props check UU5.Forms.Number daf props values 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props buttonHidden=false 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props buttonHidden=true 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap uu5-forms-number-hidden-buttons"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props className="my-classname" 1`] = `
<div
  className="uu5-forms-number my-classname uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props className="test-classname" 1`] = `
<div
  className="uu5-forms-number test-classname uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="brown" 1`] = `
<div
  className="color-schema-brown uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "brown",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "brown",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="brown"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="brown-rich" 1`] = `
<div
  className="color-schema-brown-rich uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "brown-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "brown-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="brown-rich"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="cyan" 1`] = `
<div
  className="color-schema-cyan uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "cyan",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "cyan",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="cyan"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="cyan-rich" 1`] = `
<div
  className="color-schema-cyan-rich uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "cyan-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "cyan-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="cyan-rich"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="default" 1`] = `
<div
  className="color-schema-default uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "default",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "default",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="default"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="green" 1`] = `
<div
  className="color-schema-green uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "green",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "green",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="green"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="green-rich" 1`] = `
<div
  className="color-schema-green-rich uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "green-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "green-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="green-rich"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="grey" 1`] = `
<div
  className="color-schema-grey uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "grey",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "grey",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="grey"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="grey-rich" 1`] = `
<div
  className="color-schema-grey-rich uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "grey-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "grey-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="grey-rich"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="orange" 1`] = `
<div
  className="color-schema-orange uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "orange",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "orange",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="orange"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="orange-rich" 1`] = `
<div
  className="color-schema-orange-rich uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "orange-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "orange-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="orange-rich"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="pink" 1`] = `
<div
  className="color-schema-pink uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "pink",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "pink",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="pink"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="pink-rich" 1`] = `
<div
  className="color-schema-pink-rich uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "pink-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "pink-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="pink-rich"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="purple" 1`] = `
<div
  className="color-schema-purple uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "purple",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "purple",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="purple"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="purple-rich" 1`] = `
<div
  className="color-schema-purple-rich uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "purple-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "purple-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="purple-rich"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="red" 1`] = `
<div
  className="color-schema-red uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "red",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "red",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="red"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="red-rich" 1`] = `
<div
  className="color-schema-red-rich uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "red-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "red-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="red-rich"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="yellow" 1`] = `
<div
  className="color-schema-yellow uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "yellow",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "yellow",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="yellow"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props colorSchema="yellow-rich" 1`] = `
<div
  className="color-schema-yellow-rich uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "yellow-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": "yellow-rich",
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      colorSchema="yellow-rich"
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props controlled=false 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      mainAttrs={
        Object {
          "onKeyDown": [Function],
          "onMouseUp": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      hidden={true}
      onChange={[Function]}
      value={null}
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props controlled=true 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      mainAttrs={
        Object {
          "onKeyDown": [Function],
          "onMouseUp": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      hidden={true}
      onChange={[Function]}
      value={null}
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props decimalSeparator="." 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props decimals=5 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props decimalsView=2 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props decimalsView=5 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props decimalsViewRounded="ceil" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props decimalsViewRounded="floor" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props decimalsViewRounded="round" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props default props 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props disabled=false 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props disabled=false 3`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props disabled=true 1`] = `
<div
  className="uu5-forms-number uu5-common-disabled uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": true,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": true,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={true}
    readonly={false}
  >
    <text-input
      disabled={true}
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props disabled=true 3`] = `
<div
  className="uu5-forms-number uu5-common-disabled uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": true,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": true,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={true}
    readonly={false}
  >
    <text-input
      disabled={true}
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props elementAttrs={"data":{"test":"data-test-value"}} 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props feedback="error" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    feedback="error"
    readonly={false}
  >
    <text-input
      feedback="error"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props feedback="initial" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props feedback="loading" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-loading uu5-forms-input-icon uu5-common-disabled uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": true,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": true,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    feedback="loading"
    readonly={false}
  >
    <text-input
      disabled={true}
      feedback="loading"
      id="uuID-input"
      key="uuID-input"
      loading={true}
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props feedback="success" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    feedback="success"
    readonly={false}
  >
    <text-input
      feedback="success"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props feedback="warning" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-warning uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    feedback="warning"
    readonly={false}
  >
    <text-input
      feedback="warning"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props fullTextSearchPriority=0 1`] = `
<div
  className="uu5-forms-number uu-fulltextsearch-0 uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props fullTextSearchPriority=0 2`] = `
<div
  className="uu5-forms-number uu-fulltextsearch-0 uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props function -> InputMixin onChange() 1`] = `
<Number
  id="checkID"
  label="Enter number"
  message=""
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value=""
/>
`;

exports[`UU5.Forms.Number props function -> InputMixin onChange() 2`] = `
<Number
  feedback="success"
  id="checkID"
  label="Enter number"
  message="Is valid."
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value="10"
/>
`;

exports[`UU5.Forms.Number props function -> InputMixin onChangeFeedback() 1`] = `
<Number
  id="checkID"
  label="Enter number"
  message=""
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value=""
/>
`;

exports[`UU5.Forms.Number props function -> InputMixin onChangeFeedback() 2`] = `
<Number
  feedback="success"
  id="checkID"
  label="Enter number"
  message="Is valid."
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value="10"
/>
`;

exports[`UU5.Forms.Number props function -> InputMixin onValidate() 1`] = `
<Number
  id="checkID"
  label="Enter number"
  message=""
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value=""
/>
`;

exports[`UU5.Forms.Number props function -> InputMixin onValidate() 2`] = `
<Number
  feedback="success"
  id="checkID"
  label="Enter number"
  message="Is valid."
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value="10"
/>
`;

exports[`UU5.Forms.Number props function -> Text.InputMixin onBlur() 1`] = `
<Number
  id="checkID"
  label="Enter number"
  message=""
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value=""
/>
`;

exports[`UU5.Forms.Number props function -> Text.InputMixin onBlur() 2`] = `
<Number
  feedback="success"
  id="checkID"
  label="Enter number"
  message="Is valid."
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value="Testing react in jest"
/>
`;

exports[`UU5.Forms.Number props function -> Text.InputMixin onEnter() 1`] = `
<Number
  id="checkID"
  label="Enter number"
  message=""
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value=""
/>
`;

exports[`UU5.Forms.Number props function -> Text.InputMixin onEnter() 2`] = `
<Number
  feedback="success"
  id="checkID"
  label="Enter number"
  message="Is valid."
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value="Testing react in jest"
/>
`;

exports[`UU5.Forms.Number props function -> Text.InputMixin onFocus() 1`] = `
<Number
  id="checkID"
  label="Enter number"
  message=""
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value=""
/>
`;

exports[`UU5.Forms.Number props function -> Text.InputMixin onFocus() 2`] = `
<Number
  feedback="success"
  id="checkID"
  label="Enter number"
  message="Is valid."
  onBlur={[Function]}
  onChange={[Function]}
  onChangeFeedback={[Function]}
  onEnter={[Function]}
  onFocus={[Function]}
  onValidate={[Function]}
  validateOnChange={true}
  value="Testing react in jest"
/>
`;

exports[`UU5.Forms.Number props function -> Text.InputMixin validateOnChange() - input is invalid 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-error uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Full name"
    for="uuID-input"
  />
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="error"
    message="Not valid."
    readonly={false}
  >
    <text-input
      feedback="error"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props function -> Text.InputMixin validateOnChange() - input is valid 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-success uu5-forms-input-icon uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Full name"
    for="uuID-input"
  />
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    feedback="success"
    message="Is valid."
    readonly={false}
  >
    <text-input
      feedback="success"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
      value="10"
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value={
        Array [
          "10",
        ]
      }
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props hidden=false 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props hidden=false 3`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props hidden=true 1`] = `
<div
  className="uu5-forms-number uu5-common-hidden uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props hidden=true 3`] = `
<div
  className="uu5-forms-number uu5-common-hidden uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props hidePrefixOnFocus=false 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props hidePrefixOnFocus=true 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props hideSuffixOnFocus=false 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props hideSuffixOnFocus=true 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props id="myId" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="myId"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="myId-input"
      key="myId-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="myId-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="myId-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props id="test-id" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="test-id"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="test-id-input"
      key="test-id-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="test-id-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="test-id-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props inputAttrs={"type":"email","width":"150px"} 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
          "type": "email",
          "width": "150px",
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props inputColWidth="xs12 s6 m8 l9" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props inputColWidth="xs12 s9" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props label="Your personal email" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
>
  <label
    colWidth="uu5-col-xs12 uu5-col-s5 uu5-col-m5 uu5-col-l5 uu5-col-xl5"
    content="Your personal email"
    for="uuID-input"
  />
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s7 uu5-col-m7 uu5-col-l7 uu5-col-xl7"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props labelAlignment="xs-left s-right" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props labelAlignment="xs-right s-left" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props labelColWidth="xs12 s3" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props labelColWidth="xs12 s6 m4 l3" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props lowerMessage=null 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props mainAttrs=undefined 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props max=665 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props message="Your password is too short!" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    message="Your password is too short!"
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props min=42 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props name="myName" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  name="myName"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="myName"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props nanMessage=null 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props nestingLevel="box" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props nestingLevel="inline" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-inline uu5-forms-input-auto-width uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      inputWidth="auto"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props noPrint=false 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props noPrint=true 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props prefix="$" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props prefix="hodnota" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props pureRender=false 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props pureRender=true 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props readOnly=false 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props readOnly=true 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-read-only uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={true}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={true}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props rounded=false 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props rounded=true 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props selected=false 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props selected=true 1`] = `
<div
  className="uu5-forms-number uu5-common-selected uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props size="l" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-l uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "l",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "l",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
      size="l"
    />
    <item-list
      className="uu5-forms-input-l"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props size="m" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props size="s" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-s uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "s",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "s",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
      size="s"
    />
    <item-list
      className="uu5-forms-input-s"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props step=2 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props style="padding:8px; borderRadius: 2px" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={
    Object {
      "borderRadius": "2px",
      "padding": "8px",
    }
  }
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props style={"backgroundColor":"red","color":"blue"} 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={
    Object {
      "backgroundColor": "red",
      "color": "blue",
    }
  }
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props style={"margin":8} 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={
    Object {
      "margin": 8,
    }
  }
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props suffix="cm" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props suffix="kč" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props thousandSeparator="," 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props tooltip="My Tooltip" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title="My Tooltip"
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props upperMessage=null 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props value="10" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
      value="10"
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value={
        Array [
          "10",
        ]
      }
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props value=10 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
      value="10"
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value={
        Array [
          "10",
        ]
      }
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props valueType="number" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;

exports[`UU5.Forms.Number props valueType="string" 1`] = `
<div
  className="uu5-forms-number uu5-forms-input uu5-forms-input-m uu5-forms-input-initial uu5-forms-input-prevent-wrap"
  id="uuID"
  style={Object {}}
  title={null}
>
  <InputWrapper
    buttons={
      Array [
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-minus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
        Object {
          "bgStyle": null,
          "borderRadius": null,
          "colorSchema": null,
          "disabled": false,
          "elevation": null,
          "icon": "mdi-plus",
          "mainAttrs": Object {
            "onMouseDown": [Function],
            "onMouseOut": [Function],
            "onMouseUp": [Function],
          },
          "onClick": [Function],
          "size": "m",
        },
      ]
    }
    colWidth="uu5-col-xs12 uu5-col-s12 uu5-col-m12 uu5-col-l12 uu5-col-xl12"
    disabled={false}
    readonly={false}
  >
    <text-input
      feedback="initial"
      id="uuID-input"
      key="uuID-input"
      mainAttrs={
        Object {
          "onCopy": [Function],
          "onKeyDown": [Function],
          "onMouseUp": [Function],
          "onPaste": [Function],
        }
      }
      name="uuID-input"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      readonly={false}
      ref_={[Function]}
    />
    <item-list
      className="uu5-forms-input-m"
      hidden={true}
      key="item-list"
      onChange={[Function]}
      value=""
    />
    <Backdrop
      hidden={true}
      id="uuID-backdrop"
      key="backdrop"
      onClick={[Function]}
    />
  </InputWrapper>
</div>
`;
